path.6 <- read_and_clean_data("../../../Mahpic/data/E06/pathology/E06_all_pathology.txt")
path.7 <- read_and_clean_data("../../../Mahpic/data/E07/pathology/E07_all_pathology.txt")
path.6$Species <- rep("Mm", dim(path.6)[1])
path.7$Species <- rep("Mf", dim(path.7)[1])
patho <- merge(path.6, path.7,by = intersect(names(path.6), names(path.7)),  all=T)
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("rbc") #"Parasites.uL..FINAL"
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
p <- ggplot(data=df,aes(x=Day, y=value, group=NHP_ID)) +
geom_line(color="red") +
geom_point(color="red")
p
pathology_data <- read.csv2(file = filename, header = T, sep = "\t")
pathology_data[pathology_data == "N/A"] <- NA
pathology_data[pathology_data == ""] <- NA
pathology_data$rbc <- as.numeric(pathology_data$rbc)
View(pathology_data)
pathology_data <- read.csv2(file = filename, header = T, sep = "\t")
pathology_data[pathology_data == "N/A"] <- NA
pathology_data[pathology_data == ""] <- NA
typeof(pathology_data$rbc)
typeof(pathology_data$NHP_ID)
View(pathology_data)
pathology_data$rbc
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
#Read pathology data and clean it
read_and_clean_data <- function(filename){
pathology_data <- read.csv2(file = filename, header = T, sep = "\t")
pathology_data[pathology_data == "N/A"] <- NA
pathology_data[pathology_data == ""] <- NA
pathology_data$rbc <- as.numeric(levels(pathology_data$rbc))[pathology_data$rbc]
return(pathology_data)
}
path.6 <- read_and_clean_data("../../../Mahpic/data/E06/pathology/E06_all_pathology.txt")
path.7 <- read_and_clean_data("../../../Mahpic/data/E07/pathology/E07_all_pathology.txt")
path.6$Species <- rep("Mm", dim(path.6)[1])
path.7$Species <- rep("Mf", dim(path.7)[1])
patho <- merge(path.6, path.7,by = intersect(names(path.6), names(path.7)),  all=T)
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("rbc") #"Parasites.uL..FINAL"
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
p <- ggplot(data=df,aes(x=Day, y=value, group=NHP_ID)) +
geom_line(color="red") +
geom_point(color="red")
p
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("rbc") #"Parasites.uL..FINAL"
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
p <- ggplot(data=df,aes(x=Day, y=value, group=NHP_ID)) +
geom_line(color=Species) +
geom_point(color=Species)
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("rbc") #"Parasites.uL..FINAL"
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
p <- ggplot(data=df,aes(x=Day, y=value, group=NHP_ID, color=Species)) +
geom_line(color=Species) +
geom_point(color=Species)
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("rbc") #"Parasites.uL..FINAL"
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
p <- ggplot(data=df,aes(x=Day, y=value, group=NHP_ID, color=Species)) +
geom_line() +
geom_point()
p
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("rbc") #"Parasites.uL..FINAL"
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
p <- ggplot(data=df,aes(x=Day, y=value, group=NHP_ID, color=Species)) +
geom_line() +
geom_point() +
scale_x_continuous(limits=c(-10, 15))
p
p <- ggplot(data=df,aes(x=Day, y=value, group=NHP_ID, color=Species)) +
geom_line() +
geom_point() +
scale_x_continuous(limits=c(-3, 15))
p
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("rbc") #"Parasites.uL..FINAL"
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
p <- ggplot(data=df,aes(x=Day, y=value, group=NHP_ID, color=Species)) +
geom_line() +
geom_point() +
scale_x_continuous(limits=c(-3, 11))
p
df <- df[df$value != 16500000,]
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("rbc") #"Parasites.uL..FINAL"
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
#remove outlier
df <- df[df$value != 16500000,]
p <- ggplot(data=df,aes(x=Day, y=value, group=NHP_ID, color=Species)) +
geom_line() +
geom_point() +
scale_x_continuous(limits=c(-3, 11))
p
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("rbc") #"Parasites.uL..FINAL"
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
#remove outlier
df <- df[df$value != 16500000,]
ggplot(data=df,aes(x=Day, y=value, group=NHP_ID, color=Species)) +
geom_line() +
geom_point() +
scale_x_continuous(limits=c(-3, 11))
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("Parasites.uL..FINAL")
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
#remove outlier
df <- df[df$value != 16500000,]
ggplot(data=df,aes(x=Day, y=value, group=NHP_ID, color=Species)) +
geom_line() +
geom_point() +
scale_x_continuous(limits=c(-3, 11))
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
#Read pathology data and clean it
read_and_clean_data <- function(filename){
pathology_data <- read.csv2(file = filename, header = T, sep = "\t")
pathology_data[pathology_data == "N/A"] <- NA
pathology_data[pathology_data == ""] <- NA
pathology_data$rbc <- as.numeric(levels(pathology_data$rbc))[pathology_data$rbc]
pathology_data$Parasites.uL..FINAL <- as.numeric(levels(pathology_data$Parasites.uL..FINAL))[pathology_data$Parasites.uL..FINAL]
return(pathology_data)
}
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("Parasites.uL..FINAL")
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
#remove outlier
df <- df[df$value != 16500000,]
ggplot(data=df,aes(x=Day, y=value, group=NHP_ID, color=Species)) +
geom_line() +
geom_point() +
scale_x_continuous(limits=c(-3, 11))
data_summary <- function(data, varname, groupnames){
require(plyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
data_sum<-ddply(data, groupnames, .fun=summary_func,
varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
#Read pathology data and clean it
read_and_clean_data <- function(filename){
pathology_data <- read.csv2(file = filename, header = T, sep = "\t")
pathology_data[pathology_data == "N/A"] <- NA
pathology_data[pathology_data == ""] <- NA
pathology_data$rbc <- as.numeric(levels(pathology_data$rbc))[pathology_data$rbc]
pathology_data$Parasites.uL..FINAL <- as.numeric(levels(pathology_data$Parasites.uL..FINAL))[pathology_data$Parasites.uL..FINAL]
return(pathology_data)
}
path.6 <- read_and_clean_data("../../../Mahpic/data/E06/pathology/E06_all_pathology.txt")
path.7 <- read_and_clean_data("../../../Mahpic/data/E07/pathology/E07_all_pathology.txt")
path.6$Species <- rep("Mm", dim(path.6)[1])
path.7$Species <- rep("Mf", dim(path.7)[1])
patho <- merge(path.6, path.7,by = intersect(names(path.6), names(path.7)),  all=T)
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("Parasites.uL..FINAL")
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
#remove outlier
df <- df[df$value != 16500000,]
ggplot(data=df,aes(x=Day, y=value, group=NHP_ID, color=Species)) +
geom_line() +
geom_point() +
scale_x_continuous(limits=c(-3, 11))
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("Parasites.uL..FINAL")
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
ggplot(data=df,aes(x=Day, y=value, group=NHP_ID, color=Species)) +
geom_line() +
geom_point()
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("Parasites.uL..FINAL")
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
ggplot(data=df,aes(x=Day, y=value, group=NHP_ID, color=Species)) +
geom_line() +
geom_point() +
scale_x_continuous(limits=c(-3, 15))
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("rbc") #"Parasites.uL..FINAL"
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
#remove outlier
df <- df[df$value != 16500000,]
ggplot(data=df,aes(x=Day, y=value, group=NHP_ID, color=Species)) +
geom_line() +
geom_point() +
scale_x_continuous(limits=c(-3, 11))
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("rbc") #"Parasites.uL..FINAL"
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
#remove outlier
df <- df[df$value != 16500000,]
df2 <- data_summary(df, varname="value",
groupnames=c("Exp", "Day"))
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("rbc") #"Parasites.uL..FINAL"
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
#remove outlier
df <- df[df$value != 16500000,]
df2 <- data_summary(df, varname="value",
groupnames=c("Species", "Day"))
ggplot(data=df,aes(x=Day, y=value, group=NHP_ID, color=Species)) +
geom_line() +
geom_point() +
scale_x_continuous(limits=c(-3, 11))
View(df2)
View(df2)
ggplot(data=df2,aes(x=Day, y=value, group=Species, color=Species)) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.1, position=position_dodge(0.05)) +
geom_line() +
geom_point() +
scale_x_continuous(limits=c(-3, 11))
columns <- c("Species","NHP_ID","Day","Time.Point")
measure_vars <- c("rbc") #"Parasites.uL..FINAL"
df <- melt(patho, id.var=columns,  measure.vars = measure_vars, na.rm=T)
#remove outlier
df <- df[df$value != 16500000,]
df2 <- data_summary(df, varname="value",
groupnames=c("Species", "Day"))
ggplot(data=df2,aes(x=Day, y=value, group=Species, color=Species)) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=.1, position=position_dodge(0.05)) +
geom_line() +
geom_point() +
scale_x_continuous(limits=c(-3, 11))
load("Z:/projects-bmed/projects/E6v7/diff_exp_allTPP_E06.RData")
load("Z:/projects-bmed/projects/E6v7/diff_exp_allTPP_E07.RData")
load("Z:/projects-bmed/projects/E6v7/diff_exp_allTPP_inter.RData")
load("Z:/projects-bmed/projects/E6v7/diff_exp_allTPP_E06.RData")
load("Z:/projects-bmed/projects/E6v7/diff_exp_allTPP_E07.RData")
load("Z:/projects-bmed/projects/E6v7/diff_exp_allTPP_inter.RData")
res.6.T03 <- binf.rna.utils::createTableAndSelect(res.common.6.T03,p = 0.01,fc = 1)
res.6.T04 <- binf.rna.utils::createTableAndSelect(res.common.6.T04,p = 0.01,fc = 1)
res.6.T05 <- binf.rna.utils::createTableAndSelect(res.common.6.T05,p = 0.01,fc = 1)
res.7.T03 <- binf.rna.utils::createTableAndSelect(res.common.7.T03,p = 0.01,fc = 1)
res.7.T04 <- binf.rna.utils::createTableAndSelect(res.common.7.T04,p = 0.01,fc = 1)
res.7.T05 <- binf.rna.utils::createTableAndSelect(res.common.7.T05,p = 0.01,fc = 1)
res.7.T06 <- binf.rna.utils::createTableAndSelect(res.common.7.T06,p = 0.01,fc = 1)
res.7.T07 <- binf.rna.utils::createTableAndSelect(res.common.7.T07,p = 0.01,fc = 1)
inter.T03 <- binf.rna.utils::createTableAndSelect(res.inter.T03,p = 0.01,fc = 1)
inter.T04 <- binf.rna.utils::createTableAndSelect(res.inter.T04,p = 0.01,fc = 1)
inter.T05 <- binf.rna.utils::createTableAndSelect(res.inter.T05,p = 0.01,fc = 1)
l1 <- rownames(res.6.T03$sel)
l2 <- rownames(res.7.T03$sel)
p<-plot_venn_diagram2(l1,l2,c("Mm","Mf"))
grid.draw(p)
ggsave("Z:/projects-bmed/projects/E6v7/venn_intra_67_DE.jpg",plot=p)
l1 <- rownames(res.6.T03$sel)
l2 <- rownames(res.7.T03$sel)
p<-plot_venn_diagram2(l1,l2,c("Mm","Mf"))
grid.draw(p)
#ggsave("Z:/projects-bmed/projects/E6v7/venn_intra_67_DE.jpg",plot=p)
l1 <- rownames(res.6.T03$sel)
l2 <- rownames(res.7.T03$sel)
p<-plot_venn_diagram2(l1,l2,c("Mm","Mf"))
grid.draw(p)
#ggsave("Z:/projects-bmed/projects/E6v7/venn_intra_67_DE.jpg",plot=p)
l1 <- rownames(res.6.T04$sel)
l2 <- rownames(res.7.T04$sel)
p<-plot_venn_diagram2(l1,l2,c("Mm","Mf"))
grid.draw(p)
#ggsave("Z:/projects-bmed/projects/E6v7/venn_intra_67_DE.jpg",plot=p)
l1 <- rownames(res.6.T05$sel)
l2 <- rownames(res.7.T05$sel)
p<-plot_venn_diagram2(l1,l2,c("Mm","Mf"))
grid.draw(p)
#ggsave("Z:/projects-bmed/projects/E6v7/venn_intra_67_DE.jpg",plot=p)
# load the GO library
library(GO.db)
labels <- c("Mm_TP4","Mf_TP4")
top_n <- 100
f1 <- "Z:/projects-bmed/projects/E6v7/GSEA/results/go/res_T4_Mm_default.GseaPreranked.1576255320862"
f2 <- "Z:/projects-bmed/projects/E6v7/GSEA/results/go/res_T4_Mf_default.GseaPreranked.1576255336331"
df_Mm <- get_gsea_df(f1)
library(tidyverse)
library(foreach)
library(doParallel)
library(foreach)
library(doSNOW)
library(stringr)
library(refGenome)
library(plyranges)
library(ape)
library(data.table)
library(plyr)
library(xml2)
library(xlsx)
library(miceadds)
library(snm)
library(DESeq2)
library(ggplot2)
library(ggrepel)
library(ggparallel)
library(ggraph)
library(ggsci)
library(plotrix)
library(VennDiagram)
library(grid)
library(RColorBrewer)
library(visNetwork)
library(igraph)
library(scales)
library(general.utils)
library(binf.rna.utils)
library(binf.gsea.visualizations)
library(binf.gsea.utils)
library(binf.modular)
library(binf.trrust)
#Ortholog analysis by OMA db
#BiocManager::install("OmaDB")
#BiocManager::install("ggtree")
#BiocManager::install("BgeeDB")
#BiocManager::install("GO.db")
# Load the package
library(devtools)
#install_github('DessimozLab/OmaDB')
library(OmaDB)
# load the GO library
library(GO.db)
labels <- c("Mm_TP4","Mf_TP4")
top_n <- 100
f1 <- "Z:/projects-bmed/projects/E6v7/GSEA/results/go/res_T4_Mm_default.GseaPreranked.1576255320862"
f2 <- "Z:/projects-bmed/projects/E6v7/GSEA/results/go/res_T4_Mf_default.GseaPreranked.1576255336331"
df_Mm <- get_gsea_df(f1)
df_Mf <- get_gsea_df(f2)
df.1 <- df_Mm[1:top_n,]
df.2 <- df_Mf[1:top_n,]
df.new <- data.frame(pathway = df.1$NAME,rank=1:top_n,label = rep(labels[1],top_n))
df.new <- rbind(df.new,data.frame(pathway = df.2$NAME,rank=1:top_n,label = rep(labels[2],top_n)))
# extract a named vector of all terms
goterms <- Term(GOTERM)
go_bp_ancestors <- as.list(GOBPANCESTOR)
#function to find matching terms
ClosestMatch = function(string, stringVector){
str = as.character(string)
a = tolower(paste(strsplit(str,'_')[[1]][-1],collapse=" "))
names(stringVector[amatch(a, stringVector, maxDist=Inf)])
#  unname(stringVector[amatch(a, stringVector, maxDist=Inf)])
}
go_id <- sapply(df.new$pathway, ClosestMatch, stringVector = goterms)
library(xlsx)
library(stringdist)
library(stringdist)
library(stringdist)
install.packages("stringdist")
library(stringdist)
# load the GO library
library(GO.db)
labels <- c("Mm_TP4","Mf_TP4")
top_n <- 100
f1 <- "Z:/projects-bmed/projects/E6v7/GSEA/results/go/res_T4_Mm_default.GseaPreranked.1576255320862"
f2 <- "Z:/projects-bmed/projects/E6v7/GSEA/results/go/res_T4_Mf_default.GseaPreranked.1576255336331"
df_Mm <- get_gsea_df(f1)
df_Mf <- get_gsea_df(f2)
df.1 <- df_Mm[1:top_n,]
df.2 <- df_Mf[1:top_n,]
df.new <- data.frame(pathway = df.1$NAME,rank=1:top_n,label = rep(labels[1],top_n))
df.new <- rbind(df.new,data.frame(pathway = df.2$NAME,rank=1:top_n,label = rep(labels[2],top_n)))
# extract a named vector of all terms
goterms <- Term(GOTERM)
go_bp_ancestors <- as.list(GOBPANCESTOR)
#function to find matching terms
ClosestMatch = function(string, stringVector){
str = as.character(string)
a = tolower(paste(strsplit(str,'_')[[1]][-1],collapse=" "))
names(stringVector[amatch(a, stringVector, maxDist=Inf)])
#  unname(stringVector[amatch(a, stringVector, maxDist=Inf)])
}
go_id <- sapply(df.new$pathway, ClosestMatch, stringVector = goterms)
#df.new$ancestor2 <- factor(sapply(go_id, function(x) go_bp_ancestors[[x]][2]))
#df.new$ancestor1 <- factor(sapply(go_id, function(x) go_bp_ancestors[[x]][1]))
#df.new$ancestor3 <- factor(sapply(go_id, function(x) go_bp_ancestors[[x]][3]))
all_ancestors <- go_bp_ancestors[go_id]
all_ancestors1 <- unlist(all_ancestors)
tab1 <- count(all_ancestors1)
tab <- sort(table(all_ancestors1), decreasing=TRUE)
a <-tab1[tab1$freq > 50,]
View(all_ancestors)
tab1 <- count(all_ancestors1)
tab1 <- plyr::count(all_ancestors1)
a <-tab1[tab1$freq > 50,]
View(a)
g <- go_id[1]
ancestors <- go_bp_ancestors[[g]]
ancestor_freq <-tab1[tab1$x %in% ancestors,]
View(ancestor_freq)
which.is.max(ancestor_freq$freq)
library(nnet)
which.is.max(ancestor_freq$freq)
ancestor_freq[which.is.max(ancestor_freq$freq),]
ancestor_freq[which.is.max(ancestor_freq$freq),"x"]
get_highest_ancestor = function(go_id, tab1) {
ancestors <- go_bp_ancestors[[go_id]]
ancestor_freq <-tab1[tab1$x %in% ancestors,]
return(as.character(ancestor_freq[which.is.max(ancestor_freq$freq),"x"]))
}
a <-tab1[tab1$freq < 100,]
go_ancestors <- sapply(go_id, get_highest_ancestor, tab1 = a)
count(go_ancestors)
plyr::count(go_ancestors)
a <-tab1[tab1$freq < 97,]
go_ancestors <- sapply(go_id, get_highest_ancestor, tab1 = a)
plyr::count(go_ancestors)
a <-tab1[tab1$freq < 86,]
go_ancestors <- sapply(go_id, get_highest_ancestor, tab1 = a)
plyr::count(go_ancestors)
a <-tab1[tab1$freq < 64,]
go_ancestors <- sapply(go_id, get_highest_ancestor, tab1 = a)
a <-tab1[tab1$freq < 64,]
plyr::count(go_ancestors)
View(df.new)
# load the GO library
library(GO.db)
labels <- c("Mm_TP4","Mf_TP4")
top_n <- 100
f1 <- "Z:/projects-bmed/projects/E6v7/GSEA/results/go/res_T4_Mm_default.GseaPreranked.1576255320862"
f2 <- "Z:/projects-bmed/projects/E6v7/GSEA/results/go/res_T4_Mf_default.GseaPreranked.1576255336331"
df_Mm <- get_gsea_df(f1)
df_Mf <- get_gsea_df(f2)
df.1 <- df_Mm[1:top_n,]
df.2 <- df_Mf[1:top_n,]
df.new <- data.frame(pathway = df.1$NAME,rank=1:top_n,label = rep(labels[1],top_n))
df.new <- rbind(df.new,data.frame(pathway = df.2$NAME,rank=1:top_n,label = rep(labels[2],top_n)))
# extract a named vector of all terms
goterms <- Term(GOTERM)
go_bp_ancestors <- as.list(GOBPANCESTOR)
#function to find matching terms
ClosestMatch = function(string, stringVector){
str = as.character(string)
a = tolower(paste(strsplit(str,'_')[[1]][-1],collapse=" "))
names(stringVector[amatch(a, stringVector, maxDist=Inf)])
#  unname(stringVector[amatch(a, stringVector, maxDist=Inf)])
}
get_highest_ancestor = function(go_id, tab1) {
ancestors <- go_bp_ancestors[[go_id]]
ancestor_freq <-tab1[tab1$x %in% ancestors,]
return(as.character(ancestor_freq[which.is.max(ancestor_freq$freq),"x"]))
}
go_id <- sapply(df.new$pathway, ClosestMatch, stringVector = goterms)
#df.new$ancestor2 <- factor(sapply(go_id, function(x) go_bp_ancestors[[x]][2]))
#df.new$ancestor1 <- factor(sapply(go_id, function(x) go_bp_ancestors[[x]][1]))
#df.new$ancestor3 <- factor(sapply(go_id, function(x) go_bp_ancestors[[x]][3]))
all_ancestors <- go_bp_ancestors[go_id]
all_ancestors1 <- unlist(all_ancestors)
tab1 <- plyr::count(all_ancestors1)
tab <- sort(table(all_ancestors1), decreasing=TRUE)
a <-tab1[tab1$freq < 64,]
go_ancestors <- sapply(go_id, get_highest_ancestor, tab1 = a)
df.new$ancestor2 <- go_ancestors
rm("go_bp_ancestors","goterms")
#reload("binf.gsea.visualizations")
#col_column <- "ancestor2"
#p <- rankedParallelPlot.2(df.new, labels, col_column)
#p
p <- rankedParallelPlot.2(df.new, labels, col_column)
p
p
reload("binf.gsea.visualizations")
reload("Z:/projects-bmed/projects/packages/R/binf.gsea.visualizations")
reload("Z:/projects-bmed/projects/packages/R/binf.gsea.visualizations")
#col_column <- "ancestor2"
p <- rankedParallelPlot.2(df.new, labels, col_column)
p
p <- rankedParallelPlot.2(df.new, labels, col_column)
p
reload("Z:/projects-bmed/projects/packages/R/binf.gsea.visualizations")
#col_column <- "ancestor2"
p <- rankedParallelPlot.2(df.new, labels, col_column)
p
p
reload("Z:/projects-bmed/projects/packages/R/binf.gsea.visualizations")
p <- rankedParallelPlot.2(df.new, labels, col_column)
p
install.packages("cartography")
library("cartography")
col = carto.pal(pal1 = "multi.pal", n1 = 3)
col
col = carto.pal(pal1 = "multi.pal", n1 = 10)
col = carto.pal(pal1 = "multi.pal", n1 = 20)
col
reload("Z:/projects-bmed/projects/packages/R/binf.gsea.visualizations")
#col_column <- "ancestor2"
p <- rankedParallelPlot.2(df.new, labels, col_column)
p
setwd("Z:/projects-bmed/projects/packages/R/")
install("general.utils")
library("devtools")
install("general.utils")
install("general.utils")
col = mypal[c(6,4,4,5,1,1)]
df_out$group <- samples$TP
