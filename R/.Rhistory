sel <- tab[tab$pVal < 0.01 & abs(tab$fc) > 1,]
return(list(tab = tab,sel = sel))
}
#Create a rank file for GSEA
createRankFileForGSEA <- function(res){
rank.1 <- data.frame(round(sign(res$log2FoldChange) * (-log(res$pvalue)), digits=7))
colnames(rank.1) <- "Rank"
rank <- data.frame(rank.1[!is.na(rank.1$Rank ),])
row.names(rank) <- row.names(res)[!is.na(rank.1$Rank )]
colnames(rank) <- "Rank"
fn <- paste0("Z:/projects-bmed/projects/E6v7/GSEA/rank_files/",as.character(bquote(res)))
write.table(rank,fn,sep="\t",col.names = F,quote = F)
}
#Analysis for inter species 6 v 7
inter.67 <- createTableAndSelect(res.inter.67)
createRankFileForGSEA(res.inter.67)
#Analysis for intra species E06
intra.6 <- createTableAndSelect(res.common.6)
createRankFileForGSEA(res.common.6)
#Analysis for intra species E07
intra.7 <- createTableAndSelect(res.common.7)
createRankFileForGSEA(res.common.7)
l1 <- rownames(intra.6$sel)
l2 <- rownames(intra.7$sel)
p<-plot_venn_diagram2(l1,l2,c("Mm","Mf"))
grid.draw(p)
ggsave("Z:/projects-bmed/projects/E6v7/venn_intra_67_DE.jpg",plot=p)
geneDistanceTable = general.utils::convertHomologTable2DistTable(all_homologs.filter)
d6only <- getAverageHomologDistance(setdiff(l1,l2),geneDistanceTable)
d7only <- getAverageHomologDistance(setdiff(l2,l1),geneDistanceTable)
d67intersect <- getAverageHomologDistance(intersect(l1,l2),geneDistanceTable)
d_union <- getAverageHomologDistance(union(l1,l2),geneDistanceTable)
dt <- data.frame(dist = all_homologs.filter$dist,row.names = all_homologs.filter$gene.name.Mm)
de.2 <- subset(dt, row.names(dt) %in% union(l1,l2))
de <- subset(de.2, de.2$dist > 0.97)
de$col <-  ifelse(row.names(de) %in% setdiff(l1,l2), "E6only", ifelse(row.names(de) %in% setdiff(l2,l1), "E7only","both"))
attach(de)
pairwise.t.test(dist,col,  p.adj = "BH", pool.sd = FALSE)
l_inter67 <-rownames(inter.67$sel)
d_inter67 <- getAverageHomologDistance(l_inter67,geneDistanceTable)
p<-plot_venn_diagram2(union(l1,l2),l_inter67,c("Union","inter67"))
grid.draw(p)
ggsave("Z:/projects-bmed/projects/E6v7/venn_union_inter67_DE.jpg",plot=p)
#Analysis for inter species 6 v 7
inter.67 <- createTableAndSelect(res.inter.67)
createRankFileForGSEA(res.inter.67)
#Analysis for intra species E06
intra.6 <- createTableAndSelect(res.common.6)
createRankFileForGSEA(res.common.6)
#Analysis for intra species E07
intra.7 <- createTableAndSelect(res.common.7)
createRankFileForGSEA(res.common.7)
as.character(bquote(res.inter.67))
res <- res.inter.67
rank.1 <- data.frame(round(sign(res$log2FoldChange) * (-log(res$pvalue)), digits=7))
colnames(rank.1) <- "Rank"
rank <- data.frame(rank.1[!is.na(rank.1$Rank ),])
row.names(rank) <- row.names(res)[!is.na(rank.1$Rank )]
colnames(rank) <- "Rank"
fn <- paste0("Z:/projects-bmed/projects/E6v7/GSEA/rank_files/",as.character(bquote(res)))
write.table(rank,fn,sep="\t",col.names = F,quote = F)
fn
#Create a rank file for GSEA
createRankFileForGSEA <- function(res,name){
rank.1 <- data.frame(round(sign(res$log2FoldChange) * (-log(res$pvalue)), digits=7))
colnames(rank.1) <- "Rank"
rank <- data.frame(rank.1[!is.na(rank.1$Rank ),])
row.names(rank) <- row.names(res)[!is.na(rank.1$Rank )]
colnames(rank) <- "Rank"
fn <- paste0("Z:/projects-bmed/projects/E6v7/GSEA/rank_files/",name)
write.table(rank,fn,sep="\t",col.names = F,quote = F)
}
#Analysis for inter species 6 v 7
inter.67 <- createTableAndSelect(res.inter.67)
createRankFileForGSEA(res.inter.67,"res.inter.67")
#Analysis for intra species E06
intra.6 <- createTableAndSelect(res.common.6)
createRankFileForGSEA(res.common.6,"res.common.6")
#Analysis for intra species E07
intra.7 <- createTableAndSelect(res.common.7)
createRankFileForGSEA(res.common.7,"res.common.7")
#Analysis for inter species 6 v 7
inter.67 <- createTableAndSelect(res.inter.67)
createRankFileForGSEA(res.inter.67,"res.inter.67.rnk")
#Analysis for intra species E06
intra.6 <- createTableAndSelect(res.common.6)
createRankFileForGSEA(res.common.6,"res.common.6.rnk")
#Analysis for intra species E07
intra.7 <- createTableAndSelect(res.common.7)
createRankFileForGSEA(res.common.7,"res.common.7.rnk")
all_homologs.filter <- readRDS("Z:/projects-bmed/Mahpic/data/E06/homology/homology_dist.rds")
dt <- data.frame(dist = all_homologs.filter$dist,row.names = all_homologs.filter$gene.name.Mm)
de.2 <- merge(inter.67$tab, dt, by=0, all.x=TRUE)
library(ggplot2)
de <- de.2[de.2$dist > 0.97,]
#for protein
#de <- de.2[de.2$dist > 4,]
#de$col <-  ifelse(de$pVal<0.05, "top",ifelse(de$pVal > 0.8, "bot","not"))
de$col <-  ifelse(de$pVal<0.05, "top","not")
de_bg <- de[, -5]
ggplot(de, aes(x = dist, fill = col)) +
geom_histogram(data = de_bg, fill = "grey", alpha = .5,bins = 100, na.rm = T) +
geom_histogram(colour = "black",bins = 100, na.rm = T) +
facet_wrap(~ col) +
guides(fill = FALSE) +  # to remove the legend
theme_bw()
ggsave("Z:/projects-bmed/projects/E6v7/histogram_homologdistance_DE.jpg")
res
View(rank.1)
View(rank)
createTableAndSelect <- function(res,p = NULL,fc = NULL){
if(!is.null(p)) p <- 0.01
if(!is.null(fc)) fc <- 1
tab.1 <- data.frame(fc = res$log2FoldChange,pVal = res$pvalue,row.names = row.names(res))
tab <- tab.1[!is.na(tab.1$pVal),]
sel <- tab[tab$pVal < p & abs(tab$fc) > fc,]
return(list(tab = tab,sel = sel))
}
#Analysis for inter species 6 v 7
inter.67 <- createTableAndSelect(res.inter.67)
createRankFileForGSEA(res.inter.67,"res.inter.67.rnk")
#Analysis for intra species E06
intra.6 <- createTableAndSelect(res.common.6)
createRankFileForGSEA(res.common.6,"res.common.6.rnk")
#Analysis for intra species E07
intra.7 <- createTableAndSelect(res.common.7)
createRankFileForGSEA(res.common.7,"res.common.7.rnk")
p = 0.01
fc = 0
inter.67.filter <- createTableAndSelect(res,p,fc)
View(inter.67.filter)
fc = 1
inter.67.filter <- createTableAndSelect(res,p,fc)
View(inter.67.filter)
createTableAndSelect <- function(res,p = NULL,fc = NULL){
if(!is.null(p)) p <- 0.01
if(!is.null(fc)) fc <- 1
tab.1 <- data.frame(fc = res$log2FoldChange,pVal = res$pvalue,row.names = row.names(res))
tab <- tab.1[!is.na(tab.1$pVal),]
sel <- tab[tab$pVal < p & abs(tab$fc) > fc,]
return(list(tab = tab,sel = sel))
}
createRankFileForGSEA <- function(res,name){
rank.1 <- data.frame(round(sign(res$log2FoldChange) * (-log(res$pvalue)), digits=7))
colnames(rank.1) <- "Rank"
rank <- data.frame(rank.1[!is.na(rank.1$Rank ),])
row.names(rank) <- row.names(res)[!is.na(rank.1$Rank )]
colnames(rank) <- "Rank"
fn <- paste0("Z:/projects-bmed/projects/E6v7/GSEA/rank_files/",name)
write.table(rank,fn,sep="\t",col.names = F,quote = F)
}
inter.67.filter <- createTableAndSelect(res,p,fc)
p
fc
fc = 0
inter.67.filter <- createTableAndSelect(res,p,fc)
fc
View(inter.67.filter)
createTableAndSelect <- function(res,p = NULL,fc = NULL){
if(!is.null(p)) p <- 0.01
if(!is.null(fc)) fc <- 1
print(fc)
print(p)
tab.1 <- data.frame(fc = res$log2FoldChange,pVal = res$pvalue,row.names = row.names(res))
tab <- tab.1[!is.na(tab.1$pVal),]
sel <- tab[tab$pVal < p & abs(tab$fc) > fc,]
return(list(tab = tab,sel = sel))
}
inter.67 <- createTableAndSelect(res.inter.67)
createTableAndSelect <- function(res,p = NULL,fc = NULL){
if(is.null(p)) p <- 0.01
if(is.null(fc)) fc <- 1
print(fc)
print(p)
tab.1 <- data.frame(fc = res$log2FoldChange,pVal = res$pvalue,row.names = row.names(res))
tab <- tab.1[!is.na(tab.1$pVal),]
sel <- tab[tab$pVal < p & abs(tab$fc) > fc,]
return(list(tab = tab,sel = sel))
}
inter.67 <- createTableAndSelect(res.inter.67)
p
fc
inter.67.filter <- createTableAndSelect(res,p,fc)
View(inter.67.filter)
inter.67.filter <- createTableAndSelect(res,p,fc)
inter.67.filter <- createTableAndSelect(res,p,fc)
p
fc
p = 0.05
inter.67.filter <- createTableAndSelect(res,p,fc)
View(inter.67.filter)
inter.67 <- createTableAndSelect(res.inter.67)
View(inter.67)
View(inter.67.filter)
createTableAndSelect <- function(res,p = NULL,fc = NULL){
if(is.null(p)) p <- 0.01
if(is.null(fc)) fc <- 1
print(fc)
print(p)
tab.1 <- data.frame(fc = res$log2FoldChange,pVal = res$pvalue,row.names = row.names(res))
tab <- tab.1[!is.na(tab.1$pVal),]
sel <- tab[tab$pVal < p & abs(tab$fc) > fc,]
return(list(tab = tab,sel = sel))
}
p
fc
inter.67.filter <- createTableAndSelect(res,p,fc)
View(inter.67.filter)
inter.67 <- createTableAndSelect(res.inter.67)
rm(inter.67)
rm(inter.67.filter)
inter.67 <- createTableAndSelect(res.inter.67)
inter.67.filter <- createTableAndSelect(res,p,fc)
View(inter.67)
View(inter.67.filter)
res.filter <- inter.67.filter$sel
View(res.filter)
createFilteredRankFileForGSEA <- function(res,name,p=NULL,fc=NULL){
if(is.null(p)) p <- 0.01
if(is.null(fc)) fc <- 1
inter.67.filter <- createTableAndSelect(res,p,fc)
res.filter <- inter.67.filter$sel
rank.1 <- data.frame(round(sign(res.filter$fc) * (-log(res.filter$pVal)), digits=7))
colnames(rank.1) <- "Rank"
rank <- data.frame(rank.1[!is.na(rank.1$Rank ),])
row.names(rank) <- row.names(res.filter)[!is.na(rank.1$Rank )]
colnames(rank) <- "Rank"
fn <- paste0("Z:/projects-bmed/projects/E6v7/GSEA/rank_files/",name)
write.table(rank,fn,sep="\t",col.names = F,quote = F)
}
createFilteredRankFileForGSEA(res.inter.67,"filter.res.inter.67.rnk",p=0.01,fc=0)
#from deseq results to table and selected table
createTableAndSelect <- function(res,p = NULL,fc = NULL){
if(is.null(p)) p <- 0.01
if(is.null(fc)) fc <- 1
tab.1 <- data.frame(fc = res$log2FoldChange,pVal = res$pvalue,row.names = row.names(res))
tab <- tab.1[!is.na(tab.1$pVal),]
sel <- tab[tab$pVal < p & abs(tab$fc) > fc,]
return(list(tab = tab,sel = sel))
}
createFilteredRankFileForGSEA(res.inter.67,"filter.res.inter.67.rnk",p=0.01,fc=0)
dist <- geneDistanceTable
View(dist)
p
fc
inter.67.filter <- createTableAndSelect(res,p,fc)
res.filter <- inter.67.filter$sel
View(res.filter)
ind <- dist$dist < d
d <- 0.98
ind <- dist$dist < d
geneList <- dist$gene[ind]
View(res.filter)
ind2 <- rownames(res.filter) %in% geneList
sum(ind2)
View(res.filter)
res.filter.2 <- res.filter[ind2,]
rank.1 <- data.frame(round(sign(res.filter.2$fc) * (-log(res.filter.2$pVal)), digits=7))
colnames(rank.1) <- "Rank"
rank <- data.frame(rank.1[!is.na(rank.1$Rank ),])
row.names(rank) <- row.names(res.filter.2)[!is.na(rank.1$Rank )]
colnames(rank) <- "Rank"
View(rank)
#Create a rank file for GSEA with filters and distance
createDistFilteredRankFileForGSEA <- function(res,name,p=NULL,fc=NULL,dist=NULL, d=NULL){
if(is.null(p)) p <- 0.01
if(is.null(fc)) fc <- 1
if(is.null(dist)){
createFilteredRankFileForGSEA(res,name,p,fc)
stop("distance file not specified")
}
if(is.null(d)) d <- 0.98
inter.67.filter <- createTableAndSelect(res,p,fc)
res.filter <- inter.67.filter$sel
ind <- dist$dist < d
geneList <- dist$gene[ind]
ind2 <- rownames(res.filter) %in% geneList
res.filter.2 <- res.filter[ind2,]
rank.1 <- data.frame(round(sign(res.filter.2$fc) * (-log(res.filter.2$pVal)), digits=7))
colnames(rank.1) <- "Rank"
rank <- data.frame(rank.1[!is.na(rank.1$Rank ),])
row.names(rank) <- row.names(res.filter.2)[!is.na(rank.1$Rank )]
colnames(rank) <- "Rank"
fn <- paste0("Z:/projects-bmed/projects/E6v7/GSEA/rank_files/",name)
write.table(rank,fn,sep="\t",col.names = F,quote = F)
}
createDistFilteredRankFileForGSEA(res.inter.67,"filter.dist.res.inter.67.rnk",p=0.01,fc=0,dist=geneDistanceTable,d=0.98)
View(geneDistanceTable)
createDistFilteredRankFileForGSEA(res.inter.67,"filter.dist.res.inter.67.rnk",p=0.05,fc=0,dist=geneDistanceTable,d=0.98)
createDistFilteredRankFileForGSEA(res.inter.67,"filter.dist.res.inter.67.rnk",p=0.05,fc=0,dist=geneDistanceTable,d=0.98)
createFilteredRankFileForGSEA(res.inter.67,"filter.res.inter.67.rnk",p=0.05,fc=0)
library(binf.gsea.visualizations)
gsea_res_folder <- "Z:/projects-bmed/projects/E6v7/GSEA/results/filter.res.inter.67.h1.GseaPreranked.1562678987842"
gsea_bar_plot(gsea_res_folder,posCount = 30,negCount = 30)
ggsave("Z:/projects-bmed/projects/E6v7/GSEA/plots/bar_filter.res.inter.67.h1.GseaPreranked.jpg")
res1 <- res.common.6
res2 <- res.common.7
View(rank.1)
View(rank)
View(rank)
rank.1.6 <- data.frame(round(sign(res1$log2FoldChange) * (-log(res1$pvalue)), digits=7))
colnames(rank.1.6) <- "Rank"
rank.6 <- data.frame(rank.1.6[!is.na(rank.1.6$Rank),])
row.names(rank.6) <- row.names(res1)[!is.na(rank.1.6$Rank)]
colnames(rank.6) <- "Rank"
rank.2.7 <- data.frame(round(sign(res2$log2FoldChange) * (-log(res2$pvalue)), digits=7))
colnames(rank.2.7) <- "Rank"
rank.7 <- data.frame(rank.2.7[!is.na(rank.2.7$Rank),])
row.names(rank.7) <- row.names(res2)[!is.na(rank.2.7$Rank)]
colnames(rank.7) <- "Rank"
de <- merge(rank.6, rank.7, by=0, all=F)
intra.6.filter <- createTableAndSelect(res1,p,fc)
res1.filter <- intra.6.filter$sel
intra.7.filter <- createTableAndSelect(res2,p,fc)
res2.filter <- intra.7.filter$sel
rank.1.6 <- data.frame(round(sign(res1.filter$log2FoldChange) * (-log(res1.filter$pvalue)), digits=7))
intra.6.filter <- createTableAndSelect(res1,p,fc)
res1.filter <- intra.6.filter$sel
intra.7.filter <- createTableAndSelect(res2,p,fc)
res2.filter <- intra.7.filter$sel
rank.1.6 <- data.frame(round(sign(res1.filter$log2FoldChange) * (-log(res1.filter$pvalue)), digits=7))
View(res1.filter)
intra.6.filter <- createTableAndSelect(res1,p,fc)
res1.filter <- intra.6.filter$sel
intra.7.filter <- createTableAndSelect(res2,p,fc)
res2.filter <- intra.7.filter$sel
rank.1.6 <- data.frame(round(sign(res1.filter$fc) * (-log(res1.filter$pVal)), digits=7))
colnames(rank.1.6) <- "Rank"
rank.6 <- data.frame(rank.1.6[!is.na(rank.1.6$Rank),])
row.names(rank.6) <- row.names(res1.filter)[!is.na(rank.1.6$Rank)]
colnames(rank.6) <- "Rank"
rank.2.7 <- data.frame(round(sign(res2.filter$fc) * (-log(res2.filter$pVal)), digits=7))
colnames(rank.2.7) <- "Rank"
rank.7 <- data.frame(rank.2.7[!is.na(rank.2.7$Rank),])
row.names(rank.7) <- row.names(res2.filter)[!is.na(rank.2.7$Rank)]
colnames(rank.7) <- "Rank"
de <- merge(rank.6, rank.7, by=0, all=F)
p
fc
View(de)
View(de)
abs( de$Rank.x)
de$Rank <- mean(abs(de$Rank.x),abs(de$Rank.y)) * round(sign(de$Rank.x)) * round(sign(de$Rank.y))
mean(abs(de$Rank.x),abs(de$Rank.y))
abs(de$Rank.x)
sum(abs(de$Rank.x),abs(de$Rank.y))
de$Rank <- mean(t(abs(de$Rank.x)),t(abs(de$Rank.y))) * round(sign(de$Rank.x)) * round(sign(de$Rank.y))
sum(t(abs(de$Rank.x)),t(abs(de$Rank.y)))
mean(de$Rank.x,de$Rank.y)
rowMeans(abs(de$Rank.x),abs(de$Rank.y))
rowMeans(c(abs(de$Rank.x),abs(de$Rank.y)))
c(abs(de$Rank.x),abs(de$Rank.y))
c(t(abs(de$Rank.x)),t(abs(de$Rank.y))
)
rowMeans(cbind(abs(de$Rank.x),abs(de$Rank.y)))
de <- merge(rank.6, rank.7, by=0, all=F)
de$Rank <- rowMeans(cbind(abs(de$Rank.x),abs(de$Rank.y))) * round(sign(de$Rank.x)) * round(sign(de$Rank.y))
p
fc
de.f <-  data.frame(de$Rank)
colnames(de.f) <- "Rank"
row.names(de.f) <- de$Row.names
View(de.f)
View(rank.6)
se <- setdiff(rownames(rank.6), rownames(rank.7))
de.f <- rank.6[rownames(rank.6) %in% se,]
rownames(de.f) <- rownames(rank.6)[rownames(rank.6) %in% se,]
se <- setdiff(rownames(rank.6), rownames(rank.7))
de.f <- data.frame(rank.6[rownames(rank.6) %in% se,])
rownames(de.f) <- rownames(rank.6)[rownames(rank.6) %in% se,]
View(de.f)
View(de.f)
se <- setdiff(rownames(rank.6), rownames(rank.7))
de.f <- data.frame(rank.6[rownames(rank.6) %in% se,])
colnames(de.f) <- "Rank"
rownames(de.f) <- rownames(rank.6)[rownames(rank.6) %in% se,]
rownames(rank.6)[rownames(rank.6) %in% se,]
sum(rownames(rank.6) %in% se)
a <-rownames(rank.6)
a[rownames(rank.6) %in% se,]
b <- rownames(rank.6) %in% se
rownames(de.f) <- rownames(rank.6)[rownames(rank.6) %in% se]
View(de.f)
createRankFileFrom2DE <- function(res1,res2,mode=NULL,filename=NULL,p=NULL,fc=NULL){
if(is.null(p)) p <- 0.01
if(is.null(fc)) fc <- 1
if(is.null(mode)) mode <- "intersect"
intra.6.filter <- createTableAndSelect(res1,p,fc)
res1.filter <- intra.6.filter$sel
intra.7.filter <- createTableAndSelect(res2,p,fc)
res2.filter <- intra.7.filter$sel
rank.1.6 <- data.frame(round(sign(res1.filter$fc) * (-log(res1.filter$pVal)), digits=7))
colnames(rank.1.6) <- "Rank"
rank.6 <- data.frame(rank.1.6[!is.na(rank.1.6$Rank),])
row.names(rank.6) <- row.names(res1.filter)[!is.na(rank.1.6$Rank)]
colnames(rank.6) <- "Rank"
rank.2.7 <- data.frame(round(sign(res2.filter$fc) * (-log(res2.filter$pVal)), digits=7))
colnames(rank.2.7) <- "Rank"
rank.7 <- data.frame(rank.2.7[!is.na(rank.2.7$Rank),])
row.names(rank.7) <- row.names(res2.filter)[!is.na(rank.2.7$Rank)]
colnames(rank.7) <- "Rank"
if (mode == "intersect"){
de <- merge(rank.6, rank.7, by=0, all=F)
de$Rank <- rowMeans(cbind(abs(de$Rank.x),abs(de$Rank.y))) * round(sign(de$Rank.x)) * round(sign(de$Rank.y))
de.f <-  data.frame(de$Rank)
colnames(de.f) <- "Rank"
row.names(de.f) <- de$Row.names
}
if (mode == "1"){
se <- setdiff(rownames(rank.6), rownames(rank.7))
de.f <- data.frame(rank.6[rownames(rank.6) %in% se,])
colnames(de.f) <- "Rank"
rownames(de.f) <- rownames(rank.6)[rownames(rank.6) %in% se]
}
if (mode == "2"){
se <- setdiff(rownames(rank.7), rownames(rank.6))
de.f <- data.frame(rank.7[rownames(rank.7) %in% se,])
colnames(de.f) <- "Rank"
rownames(de.f) <- rownames(rank.7)[rownames(rank.7) %in% se]
}
fn <- paste0("Z:/projects-bmed/projects/E6v7/GSEA/rank_files/",filename)
write.table(de.f,fn,sep="\t",col.names = F,quote = F)
}
createRankFileFrom2DE(res.common.6,res.common.7,mode="intersect",filename="intra67.intersect.rnk",p=0.05,fc=0)
createRankFileFrom2DE(res.common.6,res.common.7,mode="1",filename="intra67.6only.rnk",p=0.05,fc=0)
createRankFileFrom2DE(res.common.6,res.common.7,mode="2",filename="intra67.7only.rnk",p=0.05,fc=0)
inter.67 <- createTableAndSelect(res.inter.67,p = 0.05,fc = 0)
View(inter.67)
#Analysis for inter species 6 v 7
inter.67 <- createTableAndSelect(res.inter.67,p = 0.05,fc = 0)
createRankFileForGSEA(res.inter.67,"res.inter.67.rnk")
#Analysis for intra species E06
intra.6 <- createTableAndSelect(res.common.6,p = 0.05,fc = 0)
createRankFileForGSEA(res.common.6,"res.common.6.rnk",)
#Analysis for inter species 6 v 7
inter.67 <- createTableAndSelect(res.inter.67,p = 0.05,fc = 0)
createRankFileForGSEA(res.inter.67,"res.inter.67.rnk")
#Analysis for intra species E06
intra.6 <- createTableAndSelect(res.common.6,p = 0.05,fc = 0)
createRankFileForGSEA(res.common.6,"res.common.6.rnk")
#Analysis for intra species E07
intra.7 <- createTableAndSelect(res.common.7,p = 0.05,fc = 0)
createRankFileForGSEA(res.common.7,"res.common.7.rnk")
l1 <- rownames(intra.6$sel)
l2 <- rownames(intra.7$sel)
p<-plot_venn_diagram2(l1,l2,c("Mm","Mf"))
grid.draw(p)
ggsave("Z:/projects-bmed/projects/E6v7/venn_intra_67_DE.jpg",plot=p)
library(binf.gsea.visualizations)
gsea_res_folder <- "Z:/projects-bmed/projects/E6v7/GSEA/results/intra67.intersect.h1.GseaPreranked.1562688432124"
p <- gsea_bar_plot(gsea_res_folder,posCount = 30,negCount = 30)
ggsave("Z:/projects-bmed/projects/E6v7/GSEA/plots/bar_intra67.intersect.h1.jpg")
library(binf.gsea.visualizations)
gsea_res_folder <- "Z:/projects-bmed/projects/E6v7/GSEA/results/intra67.6only.h1.GseaPreranked.1562688412384"
p <- gsea_bar_plot(gsea_res_folder,posCount = 30,negCount = 30)
ggsave("Z:/projects-bmed/projects/E6v7/GSEA/plots/bar_intra67.6only.h1.jpg")
library(binf.gsea.visualizations)
gsea_res_folder <- "Z:/projects-bmed/projects/E6v7/GSEA/results/intra67.7only.h1.GseaPreranked.1562688443616"
p <- gsea_bar_plot(gsea_res_folder,posCount = 30,negCount = 30)
ggsave("Z:/projects-bmed/projects/E6v7/GSEA/plots/bar_intra67.7only.h1.jpg")
createFilteredRankFileForGSEA(res.inter.67,"res.inter.filter01.67.rnk",p=0.01,fc = 1)
View(inter.67)
inter.67 <- createTableAndSelect(res.inter.67,p = 0.01,fc = 1)
View(inter.67)
View(inter.67)
a <- inter.67$sel
View(a)
write.csv(row.names(inter.67),row.names=FALSE)
write.csv(row.names(inter.67),row.names=FALSE,file = "Z:/projects-bmed/projects/E6v7/inter.67.txt")
write.csv(row.names(inter.67),row.names=T,file = "Z:/projects-bmed/projects/E6v7/inter.67.txt")
row.names(inter.67)
View(inter.67)
rownames(inter.67$sel)
write.csv(rownames(inter.67$sel),row.names=T,file = "Z:/projects-bmed/projects/E6v7/inter.67.txt")
write.csv(rownames(inter.67$sel),row.names=F,file = "Z:/projects-bmed/projects/E6v7/inter.67.txt")
write.csv(rownames(inter.67$sel),row.names=F,eol = ",",file = "Z:/projects-bmed/projects/E6v7/inter.67.txt")
write.csv(rownames(inter.67$sel),row.names=F,eol = ",",sep = ",",file = "Z:/projects-bmed/projects/E6v7/inter.67.txt")
write.csv(rownames(inter.67$sel),row.names=F,eol = ",",sep = ",",quote = F,file = "Z:/projects-bmed/projects/E6v7/inter.67.txt")
library(httr)
url = "https://omabrowser.org/api/protein/P53_RAT/"
response = GET(url)
response_content_list = httr::content(response, as = "parsed")
library(httr)
url = "https://omabrowser.org/api/protein/P53_RAT/"
response = GET(url)
response_content_list = httr::content(response, as = "parsed")
library(httr)
url = "https://omabrowser.org/api/protein/P53_RAT/"
response = GET(url)
response_content_list = httr::content(response, as = "parsed")
# installing latest version of the OmaDB package
library(devtools)
install_github('DessimozLab/OmaDB')
# installing the dependencies that are needed for these examples
# installing bioconductor's ggtree package
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
for (bc in c("ggtree", "BgeeDB")){
if (!require(bc, character.only=TRUE)){
BiocManager::install(bc)
require(bc, character.only=TRUE)
}
}
for (pac in c('rphylopic','plyr','dplyr','ggimage')){
if (!require(pac, character.only=TRUE)){
install.packages(pac);
require(pac, character.only=TRUE)
}
}
library(OmaDB)
library(devtools)
install_github('DessimozLab/OmaDB')
